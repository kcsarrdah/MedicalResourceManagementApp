/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import models.encounter;
import models.hospital;
import models.patient;
import mrmapp.LoginPage;
import mrmapp.MRMApp;
import static mrmapp.MRMApp.cities;
import static mrmapp.MRMApp.docName;
import static mrmapp.MRMApp.encounters;
import static mrmapp.MRMApp.hospitals;
import static mrmapp.MRMApp.patUserName;
import static mrmapp.MRMApp.patients;

/**
 *
 * @author kcsar
 */
public class patientDashboard extends javax.swing.JFrame {

    /**
     * Creates new form patientDashboard
     */
    public patientDashboard() {
        initComponents();
    }
    public void getPatName(String patUserName){ 
        jLabel1.setText(patUserName);
        MRMApp.patUserName = patUserName;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnViewEncounter = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnSearchHosp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Welcome Patient");

        jButton1.setText("LogOut");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnViewEncounter.setText("Encounters History");
        btnViewEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncounterActionPerformed(evt);
            }
        });

        jButton4.setText("Edit Profile");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnSearchHosp.setText("Search Hospitals");
        btnSearchHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchHospActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnViewEncounter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSearchHosp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnViewEncounter)
                .addGap(18, 18, 18)
                .addComponent(btnSearchHosp)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(42, 42, 42)
                .addComponent(jButton1)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.hide();
        LoginPage lp = new LoginPage();
        lp.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnViewEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncounterActionPerformed
        // TODO add your handling code here:
        viewFormPatient vp = new viewFormPatient();
        int id = patients.get(patUserName).getPatientId();
        System.out.println("id = " + id);
        DefaultTableModel model = (DefaultTableModel) vp.jTable1.getModel();
        
        for(int i=0;i<encounters.size();i++){
            if(encounters.get(i).getPatientID() == id) {
                Format formatter = new SimpleDateFormat("MM/dd/yyyy");
                String s = formatter.format(encounters.get(i).getDate());
                String data[] = {encounters.get(i).getDoctorName(), encounters.get(i).getHospitalName(), s, Float.toString(encounters.get(i).getBloodPressure()), Float.toString(encounters.get(i).getHeartRate()), Float.toString(encounters.get(i).getTemperature())};
                model.addRow(data);
            }
        }
        vp.show();
    }//GEN-LAST:event_btnViewEncounterActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

            createPatient cp = new createPatient();
            System.out.println(patUserName);
            for (HashMap.Entry<String, patient> set : patients.entrySet()) {
                if(patUserName.equals(set.getValue().getUsername())) {
                    cp.show();
                            for(int i=0;i<cities.size();i++) {
               cp.jcCity.addItem(cities.get(i));
        }
                    System.out.println("patient username = " + patUserName);
                    System.out.println(set.getValue().getFirstName());
                    cp.tfFirstName.setText(set.getValue().getFirstName());
                    cp.tfUserName.setText(set.getValue().getUsername());
                    
                    cp.tfAge.setText(Integer.toString(set.getValue().getAge()));
        //          cd.jcGender.setSelectedItem(doctors.get(id).getGender());
                    cp.tfLastName.setText(set.getValue().getLastName());
                    cp.tfHouseName.setText(set.getValue().getHouseName());
                    //cp.tfDrID.setText(Integer.toString(id));
                    cp.tfZipCode.setText(Integer.toString(set.getValue().getZip()));
                }   
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnSearchHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchHospActionPerformed
        // TODO add your handling code here:
        ViewDocsPatientForm vdc = new ViewDocsPatientForm();
        vdc.jlCommName.setText(patients.get(patUserName).getName());
        for (HashMap.Entry<Integer, hospital> set : hospitals.entrySet()) {
            if(set.getValue().getName().equals(patients.get(patUserName).getName())) {
                vdc.jcHosp.addItem(set.getValue().getHospitalName());
            }
        }
        vdc.show();
    }//GEN-LAST:event_btnSearchHospActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patientDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patientDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patientDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patientDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new patientDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearchHosp;
    private javax.swing.JButton btnViewEncounter;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    public javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
